#pragma once

#include "aircraft/interfaces/primitive_types.hpp"
#include "aircraft/interfaces/idisturbance.hpp"

namespace hako::aircraft {
 
#define MAX_CONTAT_NUM 10
#define MAX_ROTOR_NUM  16

typedef struct {
    bool collision;
    int contact_num;
    drone_physics::VectorType relative_velocity;
    drone_physics::VectorType contact_position[MAX_CONTAT_NUM];
    double restitution_coefficient;
} DroneDynamicsCollisionType;

typedef struct {
    bool collision;
    bool is_target_static;
    double restitution_coefficient;
    drone_physics::VectorType self_contact_vector;
    drone_physics::VectorType normal;
    drone_physics::VectorType target_contact_vector;
    drone_physics::VelocityType target_velocity;
    drone_physics::AngularVelocityType target_angular_velocity;
    drone_physics::EulerType target_euler;
    drone_physics::InertiaDiagType target_inertia;
    double target_mass;
} DroneDynamicsImpulseCollisionType;

typedef struct {
    bool control;
    DronePositionType pos;
    DroneEulerType angle;
} DroneDynamicsManualControlType;

typedef struct {
    mi_drone_sensor_disturbance_t values;
} DroneDynamicsDisturbanceType;

typedef struct {
    DroneThrustType thrust;
    DroneTorqueType torque;
} RotorThrustTorqueType;

typedef struct {
    /*
     * Input data for both point mass and rigid-body models
     */
    double controls[MAX_ROTOR_NUM]; // Duty rate (PWM/throttle) for each rotor
    RotorThrustTorqueType thrust_torque[MAX_ROTOR_NUM]; // Thrust and torque generated by each rotor

    /*
     * Input data for point mass-based models
     */
    DroneDynamicsCollisionType collision; // Continuous force due to collision
    DroneDynamicsImpulseCollisionType impulse_collision; // Impulse force from instantaneous collision impact
    DroneDynamicsDisturbanceType disturbance; // External disturbances (e.g., wind, sensor noise)
    double atmospheric_pressure;

    DroneThrustType thrust; // Total thrust applied to the entire aircraft (sum of all rotors)
    DroneTorqueType torque; // Total torque applied to the entire aircraft (sum of all rotors)

    /*
     * Obsolete: Influence of manual control (pilot input)
     * (This field is deprecated and may be removed in future versions.)
     */
    DroneDynamicsManualControlType manual;
} AircraftInputType;

class IAirCraftInputAccessor {
public:
    virtual ~IAirCraftInputAccessor() {}
    virtual const AircraftInputType& get_input() = 0;
};

}